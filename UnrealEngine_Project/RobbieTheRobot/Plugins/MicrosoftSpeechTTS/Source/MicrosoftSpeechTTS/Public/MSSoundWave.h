// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "Sound/SoundWave.h"
#include "MSSoundWave.generated.h"

/**
 * 
 */
UCLASS()
class MICROSOFTSPEECHTTS_API UMSSoundWave : public USoundWave
{
	GENERATED_BODY()

	public:
	/**
	* Initialize the SoundWave to hold audio data
	* @param Text: Fstring - The text to be spoken
	* @return success
	*/
	bool Initialize(FString Text);
	UMSSoundWave(const class FObjectInitializer& ObjectInitializer);

	/*
	* Takes audio from AudioBuffer and put it into PCMData. AudioBuffer is already uint8, and each iteration assigns two uint8 for 16-bit audio.
	* @param PCMData - Array to be populated with audio
	* @param SamplesNeeded - Number of samples to be put into PCMData
	* @return bytes provided
	*/
	virtual int32 GeneratePCMData(uint8* PCMData, const int32 SamplesNeeded);

	~UMSSoundWave();
	
private:
	
	char* AudioBuffer;
	char* SilenceBuffer[255 * 4];
	
	//Number of bytes taken from text to speech synthesis
	unsigned long BytesRead;
	
	//Current position in the AudioBuffer generated by speech synthesis
	unsigned long SampleCursor;

	uint8 GenerationNumber;

	
};
